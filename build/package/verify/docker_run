#!/usr/bin/env bash

set -e -u -x

source_dir="$(dirname "$(dirname "$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")")")"
docker_image=${DIST/-/:}
container_name="api-umbrella-package-$DIST-verify"
container_name=${container_name//[^a-zA-Z0-9_.-]/}
init_container_name="${container_name}-init"

# Wipe any previous build attempts.
existing=$(docker ps -a -q --filter="name=$init_container_name")
if [ "$existing" != "" ]; then
  docker rm -f "$existing"
fi
existing=$(docker ps -a -q --filter="name=$container_name")
if [ "$existing" != "" ]; then
  docker rm -f "$existing"
fi
existing=$(docker images -a -q --filter="reference=$init_container_name")
if [ "$existing" != "" ]; then
  docker rmi -f "$existing"
fi

install_init_cmd=""
if [ "$DIST" == "centos-6" ]; then
  # CentOS 6 docker image no longer has /sbin/init pre-installed:
  # https://github.com/CentOS/sig-cloud-instance-images/issues/28#issuecomment-306801650
  install_init_cmd="yum -y install initscripts"
fi

# Run inside a privileged container for systemd things to work. First install
# /sbin/init (it's missing from some docker base images), and then run
# /sbin/init so we can better emulate a real server for systemd testing.
docker run \
  --name="$init_container_name" \
  "$docker_image" \
  bash -c "$install_init_cmd"
docker commit "$init_container_name" "$init_container_name"
docker run \
  --name="$container_name" \
  --volume="$source_dir:/api-umbrella" \
  --env="container=docker" \
  --env="DIST=$DIST" \
  --tty \
  --privileged \
  --detach \
  "$init_container_name" \
  /sbin/init

# Next run our script to install the API Umbrella package and perform
# verification tests.
docker exec --tty "$container_name" /bin/bash -c "/api-umbrella/build/package/verify/docker_script"

# Delete after successful run.
docker stop "$container_name"
docker rm -f "$init_container_name"
docker rm -f "$container_name"
docker rmi -f "$init_container_name"

echo "Completed package verification for $DIST"
