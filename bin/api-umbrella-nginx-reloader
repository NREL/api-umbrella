#!/usr/bin/env bash

set -e -u

# Kill the child "sleep" processes on exit.
cleanup() {
  local pids
  pids=($(jobs -pr))
  if [ -n "${pids:-}" ]; then
    kill "${pids[@]}"
  fi
}
trap "cleanup" EXIT

if [ -z "${API_UMBRELLA_NGINX_RELOADER_FREQUENCY:-}" ]; then
  echo "Error: API_UMBRELLA_NGINX_RELOADER_FREQUENCY environment variable is not set"
  exit 1
fi

if [ -z "${API_UMBRELLA_PERP_BASE:-}" ]; then
  echo "Error: API_UMBRELLA_PERP_BASE environment variable is not set"
  exit 1
fi

# FIXME: Reload nginx after a certain amount of time passes. This is an ugly
# workaround to alleviate potential memory leaks we've seen in some
# environments: https://github.com/18F/api.data.gov/issues/296 We should remove
# this once we figure out the underlying issue.
while true; do
  sleep "$API_UMBRELLA_NGINX_RELOADER_FREQUENCY"
  echo "Reloading nginx..."
  perpctl -b "$API_UMBRELLA_PERP_BASE" hup nginx
done
