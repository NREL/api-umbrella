#!/usr/bin/env bash

set -Eeuo pipefail

if [ -z "${API_UMBRELLA_ROOT:-}" ]; then
  export API_UMBRELLA_ROOT="/opt/api-umbrella"
fi

# Determine the default root of the API Umbrella source code, based on the
# current location of this binary file.
if [ -z "${API_UMBRELLA_SRC_ROOT:-}" ]; then
  # Resolve the current path, taking into account symlinks.
  # http://stackoverflow.com/a/246128/222487
  source="${BASH_SOURCE[0]}"
  while [ -L "$source" ]; do
    dir="$(cd -P "$(dirname "$source")" && pwd)"
    source="$(readlink "$source")"
    [[ $source != /* ]] && source="$dir/$source"
  done
  API_UMBRELLA_SRC_ROOT="$(cd -P "$(dirname "$(dirname "$source")")" && pwd)"
  export API_UMBRELLA_SRC_ROOT
fi

# Determine the default root of the API Umbrella installation (where all of our
# dependencies are installed to).
if [ -z "${API_UMBRELLA_EMBEDDED_ROOT:-}" ]; then
  # Default to /opt/api-umbrella unless it looks like we're working in
  # development and we've locally compiled all of the dependencies into
  # build/work/stage (via "make"). This lets us run "./bin/api-umbrella" while
  # doing development without having to actually "make install" all the
  # dependencies into the system-wide location.
  if [ -d "$API_UMBRELLA_SRC_ROOT/build/work/stage/opt/api-umbrella" ]; then
    export API_UMBRELLA_EMBEDDED_ROOT="$API_UMBRELLA_SRC_ROOT/build/work/stage/opt/api-umbrella/embedded"
  else
    export API_UMBRELLA_EMBEDDED_ROOT="$API_UMBRELLA_ROOT/embedded"
  fi
fi

# Set the path for binaries.
export PATH="$API_UMBRELLA_SRC_ROOT/bin:$API_UMBRELLA_EMBEDDED_ROOT/sbin:$API_UMBRELLA_EMBEDDED_ROOT/bin:$PATH"

# Set the path for libraries.
export LD_LIBRARY_PATH="$API_UMBRELLA_EMBEDDED_ROOT/openresty/luajit/lib:$API_UMBRELLA_EMBEDDED_ROOT/lib:${LD_LIBRARY_PATH:-}"

# Set the Lua load paths to include the vendored app dependencies and the
# embedded openresty installation.
#
# Note that we purposefully don't use any of the default Lua load paths (like
# /usr/local) so that other Lua packages on the system aren't picked up (since
# they might conflict).
export LUA_PATH="$API_UMBRELLA_EMBEDDED_ROOT/app/vendor/lua/share/lua/5.1/?.lua;\
$API_UMBRELLA_EMBEDDED_ROOT/app/vendor/lua/share/lua/5.1/?/init.lua;\
$API_UMBRELLA_EMBEDDED_ROOT/openresty/lualib/?.lua;\
$API_UMBRELLA_EMBEDDED_ROOT/openresty/lualib/?/init.lua;\
$API_UMBRELLA_EMBEDDED_ROOT/openresty/luajit/share/luajit-2.1.0-beta2/?.lua;\
$API_UMBRELLA_EMBEDDED_ROOT/openresty/luajit/share/luajit-2.1.0-beta2/?/init.lua;\
$API_UMBRELLA_EMBEDDED_ROOT/openresty/luajit/share/lua/5.1/?.lua;\
$API_UMBRELLA_EMBEDDED_ROOT/openresty/luajit/share/lua/5.1/?/init.lua"
if [ -n "$API_UMBRELLA_SRC_ROOT" ]; then
  export LUA_PATH="$API_UMBRELLA_SRC_ROOT/src/?.lua;$LUA_PATH"
fi
export LUA_CPATH="$API_UMBRELLA_EMBEDDED_ROOT/app/vendor/lua/lib/lua/5.1/?.so;\
$API_UMBRELLA_EMBEDDED_ROOT/openresty/lualib/?.so;\
$API_UMBRELLA_EMBEDDED_ROOT/openresty/luajit/lib/lua/5.1/?.so"
