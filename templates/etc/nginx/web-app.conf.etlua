worker_processes <%- config["web"]["workers"] %>;
error_log stderr <%- config["web"]["error_log_level"] %>;
daemon off;
pid <%- config["run_dir"] %>/nginx-web-app.pid;

<% if config["user"] then %>
  user <%- config["user"] %> <%- config["group"] %>;
<% end %>

events {
  worker_connections <%- config["web"]["worker_connections"] %>;
}

env API_UMBRELLA_SRC_ROOT;
env API_UMBRELLA_RUNTIME_CONFIG;

pcre_jit on;

http {
  access_log <%- config["log_dir"] %>/nginx-web-app/<%- config["nginx"]["access_log_filename"] %> combined;

  client_body_temp_path <%- config["tmp_dir"] %>/nginx-web-app-client_body_temp;
  proxy_temp_path <%- config["tmp_dir"] %>/nginx-web-app-proxy_temp;
  fastcgi_temp_path <%- config["tmp_dir"] %>/nginx-web-app-fastcgi_temp;
  uwsgi_temp_path <%- config["tmp_dir"] %>/nginx-web-app-uwsgi_temp;
  scgi_temp_path <%- config["tmp_dir"] %>/nginx-web-app-scgi_temp;
  server_tokens off;

  # client_body_buffer_size must be configured to be the same size as
  # client_max_body_size, or else large bodies will not be read in (but error
  # will be thrown either): https://github.com/leafo/lapis/issues/179
  client_max_body_size <%- config["web"]["max_body_size"] %>;
  client_body_buffer_size <%- config["web"]["max_body_size"] %>;

  <% if config["_development_env?"] then %>
    lua_code_cache off;
  <% end %>

  # FIXME: Detect path/make configurable.
  lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
  lua_ssl_verify_depth 5;

  lua_package_path '<%- config["_src_root_dir"] %>/src/api-umbrella/web-app/?.lua;<%- config["_package_path"] %>';
  lua_package_cpath '<%- config["_package_cpath"] %>';
  lua_check_client_abort on;
  if_modified_since off;

  lua_shared_dict active_config <%- config["nginx"]["shared_dicts"]["active_config"]["size"] %>;
  lua_shared_dict active_config_locks <%- config["nginx"]["shared_dicts"]["active_config_locks"]["size"] %>;
  lua_shared_dict active_config_ipc <%- config["nginx"]["shared_dicts"]["active_config_ipc"]["size"] %>;
  lua_shared_dict interval_locks <%- config["nginx"]["shared_dicts"]["interval_locks"]["size"] %>;
  lua_shared_dict jobs <%- config["nginx"]["shared_dicts"]["jobs"]["size"] %>;
  lua_shared_dict locks <%- config["nginx"]["shared_dicts"]["locks"]["size"] %>;

  # For lua-resty-openidc
  lua_shared_dict discovery <%- config["nginx"]["shared_dicts"]["discovery"]["size"] %>;
  lua_shared_dict jwks <%- config["nginx"]["shared_dicts"]["jwks"]["size"] %>;
  lua_shared_dict introspection <%- config["nginx"]["shared_dicts"]["introspection"]["size"] %>;

  <% if config["dns_resolver"]["_nameservers_nginx"] then %>
    # FIXME: Make ipv6 configurable.
    resolver <%- config["dns_resolver"]["_nameservers_nginx"] %> ipv6=off;
    resolver_timeout 12s;
  <% end %>

  include ./mime.conf;
  include ./realip.conf;

  init_by_lua_file '<%- config["_src_root_dir"] %>/src/api-umbrella/web-app/hooks/init.lua';
  init_worker_by_lua_file '<%- config["_src_root_dir"] %>/src/api-umbrella/web-app/hooks/init_worker.lua';

  server {
    listen <%- config["web"]["host"] %>:<%- config["web"]["port"] %> so_keepalive=<%- config["web"]["listen_so_keepalive"] %><% if config["web"]["listen_backlog"] then %> backlog=<%- config["web"]["listen_backlog"] %><% end %>;

    set $x_api_umbrella_request_id $http_x_api_umbrella_request_id;

    # Security headers
    # https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#tab=Headers
    more_set_headers "X-XSS-Protection: 1; mode=block";
    more_set_headers "X-Frame-Options: DENY";
    more_set_headers "X-Content-Type-Options: nosniff";

    rewrite ^/admin$ /admin/ permanent;

    location /admin/assets/ {
      <% if not config["_development_env?"] then %>
        more_set_headers "Cache-Control: public, max-age=31536000, immutable";
        alias <%- config["_embedded_root_dir"] %>/app/build/dist/admin-ui/assets/;
      <% else %>
        proxy_pass http://127.0.0.1:<%- config["ember_server"]["port"] %>;
      <% end %>
    }

    <% if config["_test_env?"] then %>
      location ~ ^/admin($|/$|/index\.html) {
        more_set_headers "Cache-Control: no-cache, max-age=0, must-revalidate, no-store";
        more_set_headers "Pragma: no-cache";
        alias <%- config["_test_env_install_dir"] %>/admin-ui/$1;
      }
    <% end %>

    location ~ ^/admin($|/$|/index\.html|/fonts/.+|/maps/.+|/ember.+) {
      <% if not config["_development_env?"] then %>
        more_set_headers "Cache-Control: no-cache, max-age=0, must-revalidate, no-store";
        more_set_headers "Pragma: no-cache";
        alias <%- config["_embedded_root_dir"] %>/app/build/dist/admin-ui/$1;
      <% else %>
        proxy_pass http://127.0.0.1:<%- config["ember_server"]["port"] %>;
      <% end %>
    }

    location /web-assets/ {
      more_set_headers "Cache-Control: public, max-age=31536000, immutable";
      alias <%- config["_embedded_root_dir"] %>/app/build/dist/web-assets/;
    }

    location / {
      default_type text/html;
      content_by_lua_block {
        local app = require "api-umbrella.web-app.app"
        require("lapis").serve(app)
      }
    }
  }
}
