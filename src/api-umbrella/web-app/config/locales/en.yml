en:
  breadcrumb_divider: "&raquo;"
  omniauth_providers:
    cas: MAX.gov
    developer: dummy login (development only)
    facebook: Facebook
    github: GitHub
    gitlab: GitLab
    google_oauth2: Google
    ldap: LDAP
  errors:
    format: "%{attribute}: %{message}"
    messages:
      invalid_host_format: must be in the format of "example.com"
      invalid_url_prefix_format: must start with "/"
      password_format: "must contain at least one lowercase letter, one uppercase letter, and one number"
      admin_not_authorized: |-
        You are not authorized to perform this action. You are only authorized to perform actions for APIs in the following areas:

        %{authorized_scopes_list}

        Contact your API Umbrella administrator if you need access to new APIs.
  mongoid:
    attributes:
      admin:
        username: Username
        email: Email
        password: Password
        password_confirmation: Password Confirmation
        current_password: Current Password
        name: Name
        notes: Notes
        authentication_token: Admin API Token
        groups: Groups
        superuser: Superuser
      api:
        backend_host: Backend Host
        backend_protocol: Backend Protocol
        frontend_host: Frontend Host
        name: Name
      api/server:
        host: Backend server host
        port: Port
      api/settings:
        append_query_string: Append Query String Parameters
        http_basic_auth: Set Headers
        require_https: HTTPS Requirements
        disable_api_key: API Key Checks
        api_key_verification_level: API Key Verification Requirements
        allowed_ips: Restrict Access to IPs
        allowed_referers: Restrict Access to HTTP Referers
        rate_limit_mode: Rate Limit
        anonymous_rate_limit_behavior:
        authenticated_rate_limit_behavior:
        pass_api_key_header:
        pass_api_key_query_param:
        error_templates: Error Templates
        error_data: Error Data
      api/url_match:
        backend_prefix: Backend Prefix
        frontend_prefix: Frontend Prefix
  admin:
    errors:
      host_format: Must be in the format of "example.com"
    edit: Edit
    remove: Remove
    reorder: Reorder
    check_all: Check all
    uncheck_all: Uncheck all
    reveal_action: (reveal)
    hide_action: (hide)
    nav:
      admin_accounts: Admin Accounts
      admin_groups: Admin Groups
      analytics: Analytics
      api_backends: API Backends
      api_drilldown: API Drilldown
      api_scopes: API Scopes
      api_users: API Users
      by_location: By Location
      by_users: By Users
      configuration: Configuration
      dashboard: Dashboard
      filter_logs: Filter Logs
      import_export: Import/Export
      logout: Sign out
      my_account: My Account
      permissions_management: Permissions Management
      publish_changes: Publish Changes
      users: Users
      website_backends: Website Backends
    api:
      servers:
        legend: Backend
        server: Server
        note: Define the server where the API is hosted. Multiple servers can be defined to perform load balancing.
        empty_list: No backend servers have been added yet. Click "%{add}" below to get started.
        add: Add Server
      host:
        legend: Host
        note: Define the host that we will listen for, and then the host the API backend is listening for.
      url_matches:
        legend: Matching URL Prefixes
        note: What URL prefixes should be routed to this backend?
        empty_list: No URL prefix matches have been added yet. Click "%{add}" below to get started.
        add: Add URL Prefix
      rewrites:
        legend: Advanced Requests Rewriting
        note: Modify the incoming request's URL or headers before passing it to the backend.
        empty_list: No request rewrites have been added yet. Click "%{add}" below to get started.
        add: Add Rewrite
      settings:
        require_https: HTTPS Requirements
        require_https_tooltip_markdown: |-
          Choose whether HTTPS is required to access this API. HTTPS is encouraged to protect the API keys.

          - **Required:** HTTPS is required to access the API. HTTP requests will return an error message instructing the user to use an HTTPS URL instead. This is the recommended and default strategy.
          - **Transitionary:** New API keys that signup after choosing this setting will be forced to use HTTPS. Existing API keys may continue to use either HTTP or HTTPS. New API keys using HTTP will return an error message instructing the user to use an HTTPS URL instead.
          - **Optional**: HTTPS is optional and either HTTP or HTTPS may be used.

          *Notes on redirects:*

          - Not all API clients will automatically follow redirects, so be careful if using a redirect strategy for existing APIs (since existing calls may break).
          - If API clients rely on the redirect for HTTPS access, this strategy does not secure the API keys, since the client may still be making an insecure initial HTTP request with their API key.
          - For GET requests a `301 Moved Permanently` redirect will be returned. For all other HTTP methods a `307 Temporary Redirect` redirect will be returned (to instruct the client to retry using the same HTTP method).
        require_https_options:
          inherit: Inherit (default - required)
          required_return_error: Required - HTTP requests will receive a message to use HTTPS
          transition_return_error: Transitionary - Optional for existing API keys, required for new API keys
          optional: Optional - HTTPS is optional
        disable_api_key: API Key Checks
        disable_api_key_options:
          inherit: Inherit (default - required)
          required: Required - API keys are mandatory
          disabled: Disabled - API keys are optional
        api_key_verification_level: API Key Verification Requirements
        api_key_verification_level_options:
          inherit: Inherit (default - none)
          none: None - API keys can be used without any verification
          transition_email: E-mail verification transition - Existing API keys will continue to work, new API keys will only work if verified
          required_email: E-mail verification required - Existing API keys will break, only new API keys will work if verified
        external_idp: External Identity Provider
        external_idp_options:
          inherit: Inherit (default - none)
          none: None
        required_roles: Required Roles
        required_roles_tooltip_markdown: |-
          Define roles that API keys must have in order to access this API. If multiple roles are set, then the API key must have all of the roles.
        required_roles_override: Override required roles from "Global Request Settings"
        required_roles_override_tooltip_markdown: |-
          By default, roles defined in "Sub-URL Request Settings" will be appended to any required roles defined in the parent "Global Request Settings." Choosing this option will cause the roles defined here to clear and override any parent roles.
        pass_api_key: Pass API Key to Backend (deprecated)
        pass_api_key_tooltip_markdown: |-
          Whether to pass the user's api key to this API backend.

          ***Deprecated:*** This is deprecated and support of this will be removed in the future. Enabling either option is not recommend.

          If your API backend needs to uniquely reference the requesting user, use the `X-Api-User-Id` HTTP header instead.

          *Note:* Passing via GET query parameter with render API Umbrella's HTTP caching layer mostly ineffectual (since the cache will be maintained per API key)
        pass_api_key_header: Via HTTP header
        pass_api_key_param: Via GET query parameter
        default_response_headers: Default Response Headers
        default_response_headers_tooltip_markdown: |-
          Define header values that will be set in the response regardless of whether the header is already set in the response.

          For example, to set default CORS headers on all responses that don't explicitly set their own CORS headers:

          ```
          Access-Control-Allow-Origin: *
          ```
        override_response_headers: Override Response Headers
        override_response_headers_tooltip_markdown: |-
          Define header values that will be set in the response regardless of whether the header is already set in the response.

          For example, to force CORS headers on all responses:

          ```
          Access-Control-Allow-Origin: *
          ```
        error_templates_json: JSON Template
        error_templates_json_tooltip_markdown: |-
          A <a href="http://handlebarsjs.com" target="_blank">Handlebars</a> template of the JSON error response. Available Handlebars variables are defined below in the Error Data section.

          Default template:

          ```
          {
            "error": {
              "code": {{code}},
              "message": {{message}}
            }
          }
          ```
        error_templates_xml: XML Template
        error_templates_xml_tooltip_markdown: |-
          A <a href="http://handlebarsjs.com" target="_blank">Handlebars</a> template of the XML error response. Available Handlebars variables are defined below in the Error Data section.

          Default template:

          ```
          &lt;?xml version="1.0" encoding="UTF-8"?&gt;
          &lt;response&gt;
            &lt;error&gt;
              &lt;code&gt;{{code}}&lt;/code&gt;
              &lt;message&gt;{{message}}&lt;/message&gt;
            &lt;/error&gt;
          &lt;/response&gt;
          ```
        error_templates_csv: CSV Template
        error_templates_csv_tooltip_markdown: |-
          A <a href="http://handlebarsjs.com" target="_blank">Handlebars</a> template of the CSV error response. Available Handlebars variables are defined below in the Error Data section.

          Default template:

          ```
          Error Code,Error Message
          {{code}},{{message}}
          ```
        error_data_common: Common (All Errors)
        error_data_common_tooltip_markdown: |-
          <a href="http://en.wikipedia.org/wiki/YAML" target="_blank">YAML</a> definition of the Handlebars variables available to all error templates.

          Default data:

          ```
          signup_url: {{base_url}}
          contact_url: "{{base_url}}/contact/"
          ```

          `{{base_url}}` is a special variable that contains a reference to the current root URL of the domain being accessed (with no trailing slash). For example, if the API URL being accessed is `https://www.example.com/foo/bar.json` then `{{base_url}}` would be `https://www.example.com`.
        error_data_api_key_missing: API Key Missing
        error_data_api_key_missing_tooltip_markdown: |-
          <a href="http://en.wikipedia.org/wiki/YAML" target="_blank">YAML</a> definition of the Handlebars variables available to the error templates.

          Default data:

          ```
          status_code: 403
          code: API_KEY_MISSING
          message: No api_key was supplied. Get one at {{signup_url}}
          ```
        error_data_api_key_invalid: API Key Invalid
        error_data_api_key_invalid_tooltip_markdown: |-
          <a href="http://en.wikipedia.org/wiki/YAML" target="_blank">YAML</a> definition of the Handlebars variables available to the error templates.

          Default data:

          ```
          status_code: 403
          code: API_KEY_INVALID
          message: An invalid api_key was supplied. Get one at {{signup_url}}
          ```
        error_data_api_key_disabled: API Key Disabled
        error_data_api_key_disabled_tooltip_markdown: |-
          <a href="http://en.wikipedia.org/wiki/YAML" target="_blank">YAML</a> definition of the Handlebars variables available to the error templates.

          Default data:

          ```
          status_code: 403
          code: API_KEY_DISABLED
          message: The api_key supplied has been disabled. Contact us at {{contact_url}} for assistance
          ```
        error_data_api_key_unauthorized: API Key Unauthorized
        error_data_api_key_unauthorized_tooltip_markdown: |-
          <a href="http://en.wikipedia.org/wiki/YAML" target="_blank">YAML</a> definition of the Handlebars variables available to the error templates.

          Default data:

          ```
          status_code: 403
          code: API_KEY_UNAUTHORIZED
          message: The api_key supplied is not authorized to access the given service. Contact us at {{contact_url}} for assistance
          ```
        error_data_over_rate_limit: Over Rate Limit
        error_data_over_rate_limit_tooltip_markdown: |-
          <a href="http://en.wikipedia.org/wiki/YAML" target="_blank">YAML</a> definition of the Handlebars variables available to the error templates.

          Default data:

          ```
          status_code: 429
          code: OVER_RATE_LIMIT
          message: You have exceeded your rate limit. Try again later or contact us at {{contact_url}} for assistance
          ```
        error_data_https_required: HTTPS Required
        error_data_https_required_tooltip_markdown: |-
          <a href="http://en.wikipedia.org/wiki/YAML" target="_blank">YAML</a> definition of the Handlebars variables available to the error templates.

          Default data:

          ```
          status_code: 400
          code: HTTPS_REQUIRED
          message: "Requests must be made over HTTPS. Try accessing the API at: {{https_url}}"
          ```

          `{{https_url}}` is a special variable that is available within the context of the HTTPS requirement error that contains a copy of the current URL with the URL schemed switched to HTTPS.
        allowed_ips_tooltip_markdown: |-
          Restrict this API key so that it may only be used from the specified IP addresses.

          Single IP addresses may be given (`10.20.30.40`) or IP ranges may be given in CIDR notation (`10.0.0.0/8`).

          Multiple IP addresses can be allowed by entering each one on a new line.
        allowed_referers_tooltip_markdown: |-
          Restrict this API key so that it may only be used when the specified URLs are present in the `Referer` HTTP header. This can be used to prevent an API key from being reused on other client-side web applications that don't match this URL (but note that this does not prevent server-side reuse where the referer could be forged).

          A full URL may be given (`https://example.com/foo`), or wildcards can be used (`*.example.com/*`).

          Multiple referers can be allowed by entering each one on a new line.
      sub_settings:
        legend: Sub-URL Request Settings
        note: Change settings for specific sub-URLs within this API.
    stats:
      filter_results: Filter Results
      filter: Filter
      switch_advanced_filters: Switch to advanced filters
      switch_simple_filters: Switch to simple filters
      advanced_filters_placeholder: Advanced filters...
      advanced_filters_tip: Advanced filters use <a href="#query_syntax_help_content" rel="popover">Lucene's Query Syntax</a>.
      advanced_filters_help_content: Use <a href="http://www.lucenetutorial.com/lucene-query-syntax.html" target="_blank">Lucene's query syntax</a> to perform complex queries.
      available_fields: Available Fields
      field: Field
      example: Example
      minute: Minute
      hour: Hour
      day: Day
      week: Week
      month: Month
      fields:
        request_method:
          label: 'Request: HTTP Method'
          description_markdown: |-
            The HTTP method of the request.
            *Example:* `GET`, `POST`, `PUT`, `DELETE`, etc.
        request_scheme:
          label: 'Request: URL Scheme'
          description_markdown: |-
            The scheme of the original request URL.
            *Example:* `http` or `https`
        request_host:
          label: 'Request: URL Host'
          description_markdown: |-
            The host of the original request URL.
            *Example:* `example.com`
        request_path:
          label: 'Request: URL Path'
          description_markdown: |-
            The path portion of the original request URL.
            *Example:* `/geocode/v1.json`
        request_url:
          label: 'Request: Full URL & Query String'
          description_markdown: |-
            The original, complete request URL.
            *Example:* `http://example.com/geocode/v1.json?address=1617+Cole+Blvd+Golden+CO`
            *Note:* If you want to simply filter on the host or path portion of the URL, your queries will run better if you use the separate "Request: URL Path" or "Request: URL Host" fields.
        request_ip:
          label: 'Request: IP Address'
          description_markdown: |-
            The IP address of the requestor.
            *Example:* `93.184.216.119`
        request_ip_country:
          label: 'Request: IP Country'
          description_markdown: |-
            The 2 letter country code (<a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2" target="_blank">ISO 3166-1</a>) that the IP address geocoded to.
            *Example:* `US`
        request_ip_region:
          label: 'Request: IP State/Region'
          description_markdown: |-
            The 2 letter state or region code (<a href="http://en.wikipedia.org/wiki/ISO_3166-2" target="_blank">ISO 3166-2</a>) that the IP address geocoded to.
            *Example:* `CO`
        request_ip_city:
          label: 'Request: IP City'
          description_markdown: |-
            The name of the city that the IP address geocoded to.
            *Example:* `Golden`
        request_user_agent:
          label: 'Request: User Agent'
          description_markdown: |-
            The full user agent string of the requestor.
            *Example:* `curl/7.33.0`
        request_user_agent_family:
          label: 'Request: User Agent Family'
          description_markdown: |-
            The overall family of the user agent.
            *Example:* `Chrome`
        request_user_agent_type:
          label: 'Request: User Agent Type'
          description_markdown: |-
            The type of user agent.
            *Example:* `Browser`
        request_referer:
          label: 'Request: Referer'
          description_markdown: |-
            The `Referer` header sent on the request
            *Example:* `https://example.com/foo`
        request_origin:
          label: 'Request: Origin'
          description_markdown: |-
            The `Origin` header sent on the request
            *Example:* `https://example.com`
        api_key:
          label: 'User: API Key'
          description_markdown: |-
            The API key used to make the request.
            *Example:* `vfcHB9tOyFKc6YbbdDsE8plxtFHvp9zXIJWAtaep`
        user_email:
          label: 'User: E-mail'
          description_markdown: |-
            The e-mail address associated with the API key used to make the request.
            *Example:* `john.doe@example.com`
        user_id:
          label: 'User: ID'
          description_markdown: |-
            The user ID associated with the API key used to make the request.
            *Example:* `ad2d94b6-e0f8-4e26-b1a6-1bc6b12f3d76`
        response_status:
          label: 'Response: HTTP Status Code'
          description_markdown: |-
            The HTTP status code returned for the response.
            *Example:* `200`, `403`, `429`, etc.
        gatekeeper_denied_code:
          label: 'Response: API Umbrella Denied Code'
          description_markdown: |-
            If API Umbrella is responsible for blocking the request, this code value describes the reason for the block.
            *Example:* `api_key_missing`, `over_rate_limit`, etc.
        response_time:
          label: 'Response: Load Time'
          description_markdown: |-
            The total amount of time taken to respond to the request (in milliseconds)
        response_content_type:
          label: 'Response: Content Type'
          description_markdown: |-
            The content type of the response.
            *Example:* `application/json; charset=utf-8`
  devise:
    sessions:
      new:
        admin_sign_in: Admin Sign In
    passwords:
      password_length_hint: "%{min} characters minimum"
      edit:
        change_my_password: Change My Password
        change_your_password: Change Your Password
        new_password: New Password
        confirm_new_password: Confirm New Password
